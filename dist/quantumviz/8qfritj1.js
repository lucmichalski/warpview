/*! Built with http://stenciljs.com */
const{h:t}=window.quantumviz;import{a as e}from"./chunk-49509f30.js";import{a as i}from"./chunk-7f4b1b2f.js";import{a}from"./chunk-b534d406.js";import{a as s}from"./chunk-c6b875fd.js";import{a as n,b as o}from"./chunk-c685c707.js";import{a as h}from"./chunk-f29847bd.js";import"./chunk-ee323282.js";class r{constructor(){this.chartTitle="",this.responsive=!1,this.showLegend=!0,this.options=new n,this.hiddenData=[],this.width="",this.height="",this.legendOffset=70,this._mapIndex={},this.LOG=new s(r),this._options={gridLineColor:"#ffee77",timeMode:"date"},this.uuid="chart-"+h.guid().split("-").join("")}onData(t,e){e!==t&&(this.LOG.debug(["data"],t),this.drawChart())}changeScale(t,e){e!==t&&(this.LOG.debug(["options"],t),this.drawChart())}hideData(t,e){if(e.length!==t.length){const e=i.cleanArray(t);Object.keys(this._mapIndex).forEach(t=>{this._chart.getDatasetMeta(this._mapIndex[t]).hidden=!!e.find(e=>e===t)}),this._chart.update()}}minBoundChange(t,e){this._chart.options.animation.duration=0,e!==t&&(this._chart.options.scales.xAxes[0].time.min=t,this.LOG.debug(["minBoundChange"],this._chart.options.scales.xAxes[0].time.min),this._chart.update())}maxBoundChange(t,e){this._chart.options.animation.duration=0,e!==t&&(this._chart.options.scales.xAxes[0].time.max=t,this.LOG.debug(["maxBoundChange"],this._chart.options.scales.xAxes[0].time.max),this._chart.update())}drawChart(){this._options.timeMode="date",this._options=h.mergeDeep(this._options,this.options);let t=this.el.shadowRoot.querySelector("#"+this.uuid),i=this.parseData(this.data),a=30*i.length+this.legendOffset,s=this.height||""!==this.height?Math.max(a,parseInt(this.height)):a;this.height=s+"",t.parentElement.style.height=s+"px",t.parentElement.style.width="100%";const n=this._options.gridLineColor,o=this,r={layout:{padding:{bottom:30*i.length}},legend:{display:this.showLegend},responsive:this.responsive,animation:{duration:0},tooltips:{mode:"x",position:"nearest",custom:function(t){t.opacity>0?o.pointHover.emit({x:t.dataPoints[0].x+15,y:this._eventPosition.y}):o.pointHover.emit({x:-100,y:this._eventPosition.y})},callbacks:{title:t=>t[0].xLabel||"",label:(t,e)=>`${e.datasets[t.datasetIndex].label}: ${e.datasets[t.datasetIndex].data[t.index].val}`}},scales:{xAxes:[{drawTicks:!1,type:"linear",time:{},gridLines:{zeroLineColor:n,color:n,display:!1},ticks:{}}],yAxes:[{display:!1,drawTicks:!1,scaleLabel:{display:!1},afterFit:function(t){t.width=100},gridLines:{color:n,zeroLineColor:n},ticks:{fontColor:n,min:0,max:1,beginAtZero:!0,stepSize:1}}]}};this.LOG.debug(["options"],this._options),"timestamp"===this._options.timeMode?(r.scales.xAxes[0].time=void 0,r.scales.xAxes[0].type="linear",r.scales.xAxes[0].ticks={fontColor:n,min:this.timeMin,max:this.timeMax}):(r.scales.xAxes[0].time={min:this.timeMin,max:this.timeMax},r.scales.xAxes[0].ticks={fontColor:n},r.scales.xAxes[0].type="time"),this._chart=new e.Scatter(t,{data:{datasets:i},options:r})}parseData(t){let e;if(this.LOG.debug(["parseData"],t),e=this.data instanceof o?t.data:t,this.LOG.debug(["parseData","dataList"],e),e&&0!==e.length){let t=[],s=0;if(!e)return;return(e=i.flatDeep(e)).forEach((e,n)=>{if(i.isGtsToAnnotate(e)){let o=[],r=a.getColor(n);const d=h.buildImage(1,30,r);e.v.forEach(t=>{o.push({x:t[0]/1e3,y:.5,val:t[t.length-1]})});let l=i.serializeGtsMetadata(e);this._mapIndex[l]=s,t.push({label:l,data:o,pointRadius:5,pointHoverRadius:5,pointHitRadius:5,pointStyle:d,borderColor:r,backgroundColor:a.transparentize(r,.5)}),s++}}),t}}componentDidLoad(){this.drawChart()}render(){return t("div",null,t("h1",null,this.chartTitle),t("div",{class:"chart-container",style:{position:"relative",width:this.width,height:this.height}},t("canvas",{id:this.uuid,width:this.width,height:this.height})))}static get is(){return"quantum-annotation"}static get encapsulation(){return"shadow"}static get properties(){return{chartTitle:{type:String,attr:"chart-title"},data:{type:"Any",attr:"data",watchCallbacks:["onData"]},el:{elementRef:!0},height:{type:String,attr:"height",mutable:!0},hiddenData:{type:"Any",attr:"hidden-data",watchCallbacks:["hideData"]},options:{type:"Any",attr:"options",watchCallbacks:["changeScale"]},responsive:{type:Boolean,attr:"responsive"},showLegend:{type:Boolean,attr:"show-legend"},timeMax:{type:Number,attr:"time-max",watchCallbacks:["maxBoundChange"]},timeMin:{type:Number,attr:"time-min",watchCallbacks:["minBoundChange"]},width:{type:String,attr:"width",mutable:!0}}}static get events(){return[{name:"pointHover",method:"pointHover",bubbles:!0,cancelable:!0,composed:!0}]}static get style(){return":host .chart-container{width:var(--quantum-chart-width,100%);height:var(--quantum-chart-height,100%);position:relative}"}}export{r as QuantumAnnotation};