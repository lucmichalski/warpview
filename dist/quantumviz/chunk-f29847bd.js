/*! Built with http://stenciljs.com */
const{h:t}=window.quantumviz;class e{static guid(){let t,e,s="";for(t=0;t<32;t++)e=16*Math.random()|0,8!=t&&12!=t&&16!=t&&20!=t||(s+="-"),s+=(12==t?4:16==t?3&e|8:e).toString(16);return s}static mergeDeep(t,...s){if(!s.length)return t;const i=s.shift();if(e.isObject(t)&&e.isObject(i))for(const s in i)e.isObject(i[s])?(t[s]||Object.assign(t,{[s]:{}}),e.mergeDeep(t[s],i[s])):Object.assign(t,{[s]:i[s]});return e.mergeDeep(t,...s)}static isObject(t){return t&&"object"==typeof t&&!Array.isArray(t)}static getGridColor(t){return"#8e8e8e"}static getTooltipCallbacks(){return{title:t=>t[0].xLabel,label:(t,e)=>{let s=e.datasets[t.datasetIndex].label||"";return s&&(s+=": "),s+t.yLabel}}}static buildImage(t,e,s){const i=new Image(t,e),r=`<svg width="${t}px" height="${e}px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ${t} ${e}" preserveAspectRatio="xMidYMid">\n<rect width="${t}" height="${e}" style="fill:${s};" />\n</svg>`;return i.src="data:image/svg+xml;base64,"+btoa(r),i}}export{e as a};