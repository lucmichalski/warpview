/*! Built with http://stenciljs.com */
const{h:t}=window.quantumviz;import{b as i}from"./chunk-cbb0389a.js";export{a as QuantumChart}from"./chunk-352f9691.js";export{a as QuantumToggle}from"./chunk-bae6e449.js";import"./chunk-ee323282.js";import"./chunk-cadd3091.js";class e{constructor(){this.unit="",this.type="line",this.chartTitle="",this.responsive=!1,this.showLegend=!1,this.data="[]",this.hiddenData="[]",this.options="{}",this.width="",this.height="",this._chart={xMin:0,xMax:0,yMin:0,yMax:0,xMinView:0,xMaxView:0,yMinView:0,yMaxView:0},this._xView="{}",this._yView="{}",this._slider={x:{element:null,width:0,max:0,cursorSize:"{}"},y:{element:null,height:0,max:0,cursorSize:"{}"}}}chartInfosWatcher(t){console.log("[chartInfosWatcher]"),this._chart.xMin=t.detail.xMin,this._chart.xMinView=t.detail.xMin,this._chart.xMax=t.detail.xMax,this._slider.x.max=t.detail.xMax,this._chart.xMaxView=t.detail.xMax,this._chart.yMin=t.detail.yMin,this._chart.yMinView=t.detail.yMin,this._chart.yMax=t.detail.yMax,this._slider.y.max=t.detail.yMax,this._chart.yMaxView=t.detail.yMax}xSliderInit(){console.log("[xSliderInit]"),this._slider.x.width=this.el.shadowRoot.querySelector("#myChart").getBoundingClientRect().width}ySliderInit(){console.log("[ySliderInit]"),this._slider.y.height=this.el.shadowRoot.querySelector("#myChart").getBoundingClientRect().height}componentDidLoad(){this.xSliderInit(),this.ySliderInit(),this.wc.forceUpdate()}xZoomListener(t){console.log("[xZoom]");let e=this._chart.xMinView,a=this._chart.xMaxView,h=a-e;t.detail.zoomValue.zoomType>0?(e+=.1*h*t.detail.zoomValue.coef,a-=.1*h*(1-t.detail.zoomValue.coef)):(e-=.15*h*t.detail.zoomValue.coef,a+=.15*h*(1-t.detail.zoomValue.coef)),e=e<this._chart.xMin?this._chart.xMin:e,a=a>this._chart.xMax?this._chart.xMax:a,this._chart.xMinView=e,this._chart.xMaxView=a,this._xView=JSON.stringify({min:i(this._chart.xMinView,"x"),max:i(this._chart.xMaxView,"x")}),h=this._chart.xMaxView-this._chart.xMinView,this._slider.x.max=this._chart.xMax-h;let s=h/(this._chart.xMax-this._chart.xMin),r=(this._chart.xMinView-this._chart.xMin)/(this._chart.xMax-this._chart.xMin);this._slider.x.cursorSize=JSON.stringify({cursorSize:s,cursorOffset:r}),this.boundsDidChange.emit({bounds:{min:this._chart.xMinView,max:this._chart.xMaxView}}),this.wc.forceUpdate()}yZoomListener(t){console.log("[yZoom]");let i=this._chart.yMinView,e=this._chart.yMaxView,a=e-i;t.detail.zoomValue.zoomType>0?(i+=.1*a*(1-t.detail.zoomValue.coef),e-=.1*a*t.detail.zoomValue.coef):(i-=.15*a*(1-t.detail.zoomValue.coef),e=e+.15*a*1-t.detail.zoomValue.coef),i=i<this._chart.yMin?this._chart.yMin:i,e=e>this._chart.yMax?this._chart.yMax:e,this._chart.yMinView=i,this._chart.yMaxView=e,console.log("yMinView",this._chart.yMinView,"yMaxView",this._chart.yMaxView),this._yView=JSON.stringify({min:this._chart.yMinView,max:this._chart.yMaxView}),a=this._chart.yMaxView-this._chart.yMinView,this._slider.y.max=this._chart.yMax-a;let h=a/(this._chart.yMax-this._chart.yMin),s=(this._chart.yMinView-this._chart.yMin)/(this._chart.yMax-this._chart.yMin);this._slider.y.cursorSize=JSON.stringify({cursorSize:h,cursorOffset:s}),this.wc.forceUpdate()}render(){return t("div",{class:"wrapper"},t("quantum-vertical-zoom-slider",{height:this._slider.y.height,id:"ySlider","min-value":this._chart.yMin,"max-value":this._slider.y.max,cursorSize:this._slider.y.cursorSize}),t("quantum-chart",{id:"myChart",alone:!1,unit:this.unit,type:this.type,"chart-title":this.chartTitle,responsive:this.responsive,"show-legend":this.showLegend,data:this.data,"hidden-data":this.hiddenData,options:this.options,width:this.width,height:this.height,"time-min":this.timeMin,"time-max":this.timeMax,xView:this._xView,yView:this._yView}),t("quantum-toggle",{id:"timeSwitch"}),t("quantum-horizontal-zoom-slider",{id:"xSlider",width:this._slider.x.width,"min-value":this._chart.xMin,"max-value":this._slider.x.max,cursorSize:this._slider.x.cursorSize}))}static get is(){return"quantum-chart-zoom"}static get encapsulation(){return"shadow"}static get properties(){return{chartTitle:{type:String,attr:"chart-title"},data:{type:String,attr:"data"},el:{elementRef:!0},height:{type:String,attr:"height"},hiddenData:{type:String,attr:"hidden-data"},options:{type:String,attr:"options"},responsive:{type:Boolean,attr:"responsive"},showLegend:{type:Boolean,attr:"show-legend"},timeMax:{type:Number,attr:"time-max"},timeMin:{type:Number,attr:"time-min"},type:{type:String,attr:"type"},unit:{type:String,attr:"unit"},wc:{elementRef:!0},width:{type:String,attr:"width"}}}static get events(){return[{name:"boundsDidChange",method:"boundsDidChange",bubbles:!0,cancelable:!0,composed:!0}]}static get listeners(){return[{name:"chartInfos",method:"chartInfosWatcher"},{name:"xZoom",method:"xZoomListener"},{name:"yZoom",method:"yZoomListener"}]}static get style(){return":host .chart-container{width:var(--quantum-chart-width,100%);height:var(--quantum-chart-height,100%);position:relative}:host .wrapper{display:grid;grid-template-columns:30px auto;grid-template-rows:auto 30px;margin:10px}:host #ySlider{grid-row:1;grid-column:1}:host #xSlider{grid-row:2;grid-column:2}:host #myChart{grid-row:1;grid-column:2}"}}export{e as QuantumChartZoom};