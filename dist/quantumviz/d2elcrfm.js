/*! Built with http://stenciljs.com */
const{h:t}=window.quantumviz;import{a as i}from"./chunk-7f4b1b2f.js";class e{constructor(){this.unit="",this.type="line",this.chartTitle="",this.responsive=!1,this.showLegend=!1,this.data="[]",this.hiddenData="[]",this.options="{}",this.width="",this.height="",this._chart={xMin:0,xMax:0,yMin:0,yMax:0,xMinView:0,xMaxView:0,yMinView:0,yMaxView:0},this._xView="{}",this._yView="{}",this._slider={x:{element:null,width:0,max:0,cursorSize:"{}"},y:{element:null,height:0,max:0,cursorSize:"{}"}}}changeScale(t,i){i!==t&&(this._options=t)}chartInfosWatcher(t){this._chart.xMin=t.detail.xMin,this._chart.xMinView=t.detail.xMin,this._chart.xMax=t.detail.xMax,this._slider.x.max=t.detail.xMax,this._chart.xMaxView=t.detail.xMax,this._chart.yMin=t.detail.yMin,this._chart.yMinView=t.detail.yMin,this._chart.yMax=t.detail.yMax,this._slider.y.max=t.detail.yMax,this._chart.yMaxView=t.detail.yMax}dataParser(){let t=[],e=JSON.parse(this.data);Array.isArray(e[0].gts)&&1==e[0].gts.length&&(e[0].gts=e[0].gts[0],console.log(e[0].gts)),e[0].gts.forEach(e=>{if(Array.isArray(e)){let a=[];e.forEach(t=>{i.isGts(t)&&a.push(t)}),a.length>0&&t.push(a)}else i.isGts(e)&&t.push(e)}),console.log("dataset",t)}componentWillLoad(){this.dataParser()}xSliderInit(){this._slider.x.width=this.el.shadowRoot.querySelector("#myChart").getBoundingClientRect().width}componentDidLoad(){this.xSliderInit(),this.wc.forceUpdate();const t=this.el.shadowRoot.querySelector("#myChart");this.png=t.toBase64Image()}xZoomListener(t){let i=this._chart.xMinView,e=this._chart.xMaxView,a=e-i;t.detail.zoomValue.zoomType>0?(i+=.1*a*t.detail.zoomValue.coef,e-=.1*a*(1-t.detail.zoomValue.coef)):(i-=.15*a*t.detail.zoomValue.coef,e+=.15*a*(1-t.detail.zoomValue.coef)),i=i<this._chart.xMin?this._chart.xMin:i,e=e>this._chart.xMax?this._chart.xMax:e,this._chart.xMinView=i,this._chart.xMaxView=e,this._xView=JSON.stringify({min:this._chart.xMinView,max:this._chart.xMaxView}),a=this._chart.xMaxView-this._chart.xMinView,this._slider.x.max=this._chart.xMax-a;let s=a/(this._chart.xMax-this._chart.xMin),h=(this._chart.xMinView-this._chart.xMin)/(this._chart.xMax-this._chart.xMin);this._slider.x.cursorSize=JSON.stringify({cursorSize:s,cursorOffset:h}),this.wc.forceUpdate()}xSliderListener(t){let i=t.detail.sliderValue-this._chart.xMinView;this._chart.xMinView+=i,this._chart.xMaxView+=i,this._xView=JSON.stringify({min:this._chart.xMinView,max:this._chart.xMaxView}),this.wc.forceUpdate()}zoomReset(){this._chart.xMinView=this._chart.xMin,this._chart.xMaxView=this._chart.xMax,this._chart.yMinView=this._chart.yMin,this._chart.yMaxView=this._chart.yMax,this._xView=JSON.stringify({min:this._chart.xMin,max:this._chart.xMax}),this._yView=JSON.stringify({min:this._chart.yMin,max:this._chart.yMax}),this._slider.x.cursorSize=JSON.stringify({cursorSize:1,cursorOffset:0}),this._slider.y.cursorSize=JSON.stringify({cursorSize:1,cursorOffset:0}),this.wc.forceUpdate()}render(){return t("div",{class:"charts-container"},t("quantum-dygraphs",{id:"myChart",standalone:!1,unit:this.unit,chartTitle:this.chartTitle,responsive:this.responsive,"show-legend":this.showLegend,data:this.data,hiddenData:this.hiddenData,options:this._options}),t("button",{id:"reset",type:"button",onClick:()=>this.zoomReset()},"Zoom Reset"),t("a",{href:this.png,download:"chart-"+Date.now()},t("button",{id:"download",type:"button"},"Download Chart")),t("div",{id:"xSliderWrapper"},t("quantum-horizontal-zoom-map",{id:"xSlider",img:this.png,width:this._slider.x.width,"min-value":this._chart.xMin,"max-value":this._slider.x.max,cursorSize:this._slider.x.cursorSize})))}static get is(){return"quantum-multi-charts"}static get encapsulation(){return"shadow"}static get properties(){return{chartTitle:{type:String,attr:"chart-title"},data:{type:String,attr:"data"},el:{elementRef:!0},height:{type:String,attr:"height"},hiddenData:{type:String,attr:"hidden-data"},options:{type:String,attr:"options",watchCallbacks:["changeScale"]},responsive:{type:Boolean,attr:"responsive"},showLegend:{type:Boolean,attr:"show-legend"},timeMax:{type:Number,attr:"time-max"},timeMin:{type:Number,attr:"time-min"},type:{type:String,attr:"type"},unit:{type:String,attr:"unit"},wc:{elementRef:!0},width:{type:String,attr:"width"}}}static get listeners(){return[{name:"chartInfos",method:"chartInfosWatcher"},{name:"xZoom",method:"xZoomListener"},{name:"xSliderValueChanged",method:"xSliderListener"}]}static get style(){return""}}export{e as QuantumMultiCharts};