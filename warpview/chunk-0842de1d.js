class t{constructor(t){this.className=t.name}static isArray(t){return t&&"object"==typeof t&&t instanceof Array&&"number"==typeof t.length&&"function"==typeof t.splice&&!t.propertyIsEnumerable("length")}log(t,s,r){let a=[];switch(a.push(`[${this.className}] ${s.join(" - ")}`),a=a.concat(r),t){case e.DEBUG:break;case e.ERROR:console.error(...a);break;case e.INFO:console.log(...a);break;case e.WARN:console.warn(...a);break;default:console.log(...a)}}debug(t,...s){this.log(e.DEBUG,t,s)}error(t,...s){this.log(e.ERROR,t,s)}warn(t,...s){this.log(e.WARN,t,s)}info(t,...s){this.log(e.INFO,t,s)}}var e;!function(t){t[t.DEBUG=0]="DEBUG",t[t.ERROR=1]="ERROR",t[t.WARN=2]="WARN",t[t.INFO=3]="INFO"}(e||(e={}));class s{static guid(){let t,e,s="";for(t=0;t<32;t++)e=16*Math.random()|0,8!=t&&12!=t&&16!=t&&20!=t||(s+="-"),s+=(12==t?4:16==t?3&e|8:e).toString(16);return s}static mergeDeep(...t){let e={},r=0;for(;r<arguments.length;r++)s.merge(arguments[r],e,!0);return e}static merge(t,e,r){for(const a in t)t.hasOwnProperty(a)&&(e[a]=r&&"[object Object]"===Object.prototype.toString.call(t[a])?s.mergeDeep(e[a],t[a]):t[a])}static isObject(t){return t&&"object"==typeof t&&!Array.isArray(t)}static getTooltipCallbacks(){return{title:t=>t[0].xLabel,label:(t,e)=>{let s=e.datasets[t.datasetIndex].label||"";return s&&(s+=": "),s+t.yLabel}}}static buildImage(t,e,s){const r=new Image(t,e);return r.src="data:image/svg+xml;base64,"+btoa(`<svg width="${t}px" height="${e}px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ${t} ${e}" preserveAspectRatio="xMidYMid">\n<rect width="${t}" height="${e}" style="fill:${s};" ></rect>\n</svg>`),r}}class r{}class a{static cleanArray(t){return t.filter(t=>!!t)}static unique(t){let e={},s=[];for(let r=0,a=t.length;r<a;++r)e.hasOwnProperty(t[r])||(s.push(t[r]),e[t[r]]=1);return s}static isArray(t){return t&&"object"==typeof t&&t instanceof Array&&"number"==typeof t.length&&"function"==typeof t.splice&&!t.propertyIsEnumerable("length")}static isValidResponse(t){let e;try{e=JSON.parse(t)}catch(e){return this.LOG.error(["isValidResponse"],"Response non JSON compliant",t),!1}return!!a.isArray(e)||(this.LOG.error(["isValidResponse"],"Response isn't an Array",e),!1)}static isEmbeddedImage(t){return!("string"!=typeof t||!/^data:image/.test(t))}static isEmbeddedImageObject(t){return!(null===t||null===t.image||null===t.caption||!a.isEmbeddedImage(t.image))}static isPositionArray(t){if(!t||!t.positions)return!1;if(a.isPositionsArrayWithValues(t)||a.isPositionsArrayWithTwoValues(t))return!0;for(let e in t.positions){if(t.positions[e].length<2||t.positions[e].length>3)return!1;for(let s in t.positions[e])if("number"!=typeof t.positions[e][s])return!1}return!0}static isPositionsArrayWithValues(t){if(null===t||null===t.positions)return!1;for(let e in t.positions){if(3!==t.positions[e].length)return!1;for(let s in t.positions[e])if("number"!=typeof t.positions[e][s])return!1}return!0}static isPositionsArrayWithTwoValues(t){if(null===t||null===t.positions)return!1;for(let e in t.positions){if(4!==t.positions[e].length)return!1;for(let s in t.positions[e])if("number"!=typeof t.positions[e][s])return!1}return!0}static metricFromJSON(t){let e={ts:t[0],value:void 0,alt:void 0,lon:void 0,lat:void 0};switch(t.length){case 2:e.value=t[1];break;case 3:e.alt=t[1],e.value=t[2];break;case 4:e.lat=t[1],e.lon=t[2],e.value=t[3];break;case 5:e.lat=t[1],e.lon=t[2],e.alt=t[3],e.value=t[4]}return e}static gtsFromJSON(t,e){return{gts:{c:t.c,l:t.l,a:t.a,v:t.v,id:e}}}static gtsFromJSONList(t,e){let s,r=[];return(t||[]).forEach((t,n)=>{let i=t;t.gts&&(i=t.gts),s=void 0!==e&&""!==e?e+"-"+n:n,a.isArray(i)&&r.push(a.gtsFromJSONList(i,s)),a.isGts(i)&&r.push(a.gtsFromJSON(i,s)),a.isEmbeddedImage(i)&&r.push({image:i,caption:"Image",id:s}),a.isEmbeddedImageObject(i)&&r.push({image:i.image,caption:i.caption,id:s})}),{content:r||[]}}static flatDeep(t){return a.isArray(t)||(t=[t]),t.reduce((t,e)=>Array.isArray(e)?t.concat(a.flatDeep(e)):t.concat(e),[])}static flattenGtsIdArray(t,e){const s=[];return a.isGts(t)&&(t=[t]),t.forEach(t=>{if(a.isArray(t)){const r=a.flattenGtsIdArray(t,e);s.push(r.res),e=r.r}else t.v&&(t.id=e,s.push(t),e++)}),{res:s,r:e}}static serializeGtsMetadata(t){let e=[];Object.keys(t.l).forEach(s=>{e.push(s+"="+t.l[s])});let s=[];return Object.keys(t.a).forEach(e=>{s.push(e+"="+t.a[e])}),t.c+"{"+e.join(",")+(s.length>0?",":"")+s.join(",")+"}"}static gtsToPath(t){let e=[];for(let s=0;s<t.v.length;s++){let r=t.v[s];4===r.length&&e.push({ts:Math.floor(r[0]/1e3),lat:r[1],lon:r[2],val:r[3]}),5===r.length&&e.push({ts:Math.floor(r[0]/1e3),lat:r[1],lon:r[2],elev:r[3],val:r[4]})}return e}static equalMetadata(t,e){if(!(void 0!==t.c&&void 0!==e.c&&void 0!==t.l&&void 0!==e.l&&t.l instanceof Object&&e.l instanceof Object))return this.LOG.error(["equalMetadata"],"Error in GTS, metadata is not well formed"),!1;if(t.c!==e.c)return!1;for(let s in t.l)if(!e.l.hasOwnProperty(s)||t.l[s]!==e.l[s])return!1;for(let s in e.l)if(!t.l.hasOwnProperty(s))return!1;return!0}static isGts(t){return!(!t||null===t.c||null===t.l||null===t.a||null===t.v||!a.isArray(t.v))}static isGtsToPlot(t){if(!a.isGts(t)||0===t.v.length)return!1;for(let e=0;e<t.v.length;e++)if(null!==t.v[e][t.v[e].length-1]){if("number"==typeof t.v[e][t.v[e].length-1]||void 0!==t.v[e][t.v[e].length-1].constructor.prototype.toFixed)return!0;break}return!1}static isBooleanGts(t){if(!a.isGts(t)||0===t.v.length)return!1;for(let e=0;e<t.v.length;e++)if(null!==t.v[e][t.v[e].length-1]){if("boolean"!=typeof t.v[e][t.v[e].length-1])return!0;break}return!1}static isGtsToAnnotate(t){if(!a.isGts(t)||0===t.v.length)return!1;for(let e=0;e<t.v.length;e++)if(null!==t.v[e][t.v[e].length-1]){if("number"!=typeof t.v[e][t.v[e].length-1]&&t.v[e][t.v[e].length-1].constructor&&"Big"!==t.v[e][t.v[e].length-1].constructor.name&&void 0===t.v[e][t.v[e].length-1].constructor.prototype.toFixed)return!0;break}return!1}static gtsSort(t){t.isSorted||(t.v=t.v.sort(function(t,e){return t[0]-e[0]}),t.isSorted=!0)}static gtsTimeRange(t){return a.gtsSort(t),0===t.v.length?null:[t.v[0][0],t.v[t.v.length-1][0]]}static getData(t){return"string"==typeof t?a.getData(JSON.parse(t)):t&&t.hasOwnProperty("data")?t:a.isArray(t)&&t.length>0&&t[0].data?t[0]:a.isArray(t)?{data:t}:new r}static getDivider(t){let e=1e3;return"ms"===t&&(e=1),"ns"===t&&(e=1e6),e}}a.LOG=new t(a),a.formatLabel=(t=>{const e=t.split("{");let s=`<span class="gtsInfo"><span class='gts-classname'>${e[0]}</span>`;if(e.length>1){s+="<span class='gts-separator'>{</span>";const t=e[1].substr(0,e[1].length-1).split(",");t.length>0&&t.forEach((e,r)=>{const a=e.split("=");e.length>1&&(s+=`<span><span class='gts-labelname'>${a[0]}</span><span class='gts-separator'>=</span><span class='gts-labelvalue'>${a[1]}</span>`,r!==t.length-1&&(s+="<span>, </span>"))}),s+="<span class='gts-separator'>}</span>"}if(e.length>2){s+="<span class='gts-separator'>{</span>";const t=e[2].substr(0,e[2].length-1).split(",");t.length>0&&t.forEach((e,r)=>{const a=e.split("=");e.length>1&&(s+=`<span><span class='gts-attrname'>${a[0]}</span><span class='gts-separator'>=</span><span class='gts-attrvalue'>${a[1]}</span>`,r!==t.length-1&&(s+="<span>, </span>"))}),s+="<span class='gts-separator'>}</span>"}return s+="</span>"});class n{constructor(){this.showDots=!1,this.timeUnit="us"}}export{t as a,s as b,a as c,n as d,r as e};